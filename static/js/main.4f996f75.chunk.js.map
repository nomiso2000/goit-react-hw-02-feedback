{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/Notification/Notifications.module.css","components/App/App.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistic/Statistic.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/App/App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","good","neutral","bad","className","styles","btnBoxTitle","btnBox","button","type","data-rate","onClick","Statistic","label","value","defaultProps","Section","children","Statistics","total","positivePercentage","statisticsBoxTitle","feedbackList","Notifications","message","notifications","App","state","handleLeaveFeedback","feedback","target","dataset","rate","setState","prevState","Object","values","this","reduce","el","Math","floor","countTotalFeedback","feedbackContainer","countPositiveFeedbackPercentage","Notification","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f996f75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnBox\":\"FeedbackOptions_btnBox__3wnnB\",\"btnBoxTitle\":\"FeedbackOptions_btnBoxTitle__UzxWa\",\"button\":\"FeedbackOptions_button__2PoeD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackList\":\"Statistics_feedbackList__1Bqrm\",\"statisticsBoxTitle\":\"Statistics_statisticsBoxTitle__3zLKL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notifications\":\"Notifications_notifications__2zeou\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackContainer\":\"App_feedbackContainer__1izqP\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const [good, neutral, bad] = options;\r\n  return (\r\n    <div>\r\n      <span className={styles.btnBoxTitle}>Please leave feedback</span>\r\n      <div className={styles.btnBox}>\r\n        <button\r\n          className={styles.button}\r\n          type=\"button\"\r\n          data-rate={good}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          Good\r\n        </button>\r\n\r\n        <button\r\n          className={styles.button}\r\n          type=\"button\"\r\n          data-rate={neutral}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          Neutral\r\n        </button>\r\n        <button\r\n          className={styles.button}\r\n          type=\"button\"\r\n          data-rate={bad}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          Bad\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.instanceOf(Array).isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistic = ({ label, value }) => (\r\n  <p className=\"feddbackItem\">{`${label}: ${value}`}</p>\r\n);\r\nStatistic.defaultProps = {\r\n  label: \"feedback\",\r\n  value: 0,\r\n};\r\nStatistic.propTypes = {\r\n  label: PropTypes.string,\r\n  value: PropTypes.number,\r\n};\r\nexport default Statistic;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ children }) => <li className=\"Item\">{children}</li>;\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Statistic from \"../Statistic/Statistic\";\r\nimport Section from \"../Section/Section\";\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div>\r\n    <span className={styles.statisticsBoxTitle}>Statistics</span>\r\n    <ul className={styles.feedbackList}>\r\n      <Section>\r\n        <Statistic label=\"Good\" value={good} />\r\n      </Section>\r\n      <Section>\r\n        <Statistic label=\"Neutral\" value={neutral} />\r\n      </Section>\r\n      <Section>\r\n        <Statistic label=\"Bad\" value={bad} />\r\n      </Section>\r\n      <Section>\r\n        <Statistic label=\"Total\" value={total} />\r\n      </Section>\r\n      <Section>\r\n        <Statistic label=\"Positive feedback\" value={positivePercentage} />\r\n      </Section>\r\n    </ul>\r\n  </div>\r\n);\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n};\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Notifications.module.css\";\r\n\r\nconst Notifications = ({ message }) => (\r\n  <div className={styles.notifications}>{message}</div>\r\n);\r\nNotifications.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { Component } from \"react\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport styles from \"./App.module.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleLeaveFeedback = ({ target }) => {\r\n    const feedback = target.dataset.rate;\r\n    this.setState((prevState) => ({\r\n      [feedback]: prevState[feedback] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback() {\r\n    return Object.values(this.state).reduce((total, el) => total + el, 0);\r\n  }\r\n\r\n  countPositiveFeedbackPercentage() {\r\n    const { good } = this.state;\r\n    const percentagePositiveFeedback = `${Math.floor(\r\n      (good / this.countTotalFeedback()) * 100\r\n    )}%`;\r\n    return percentagePositiveFeedback;\r\n  }\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <div className={styles.feedbackContainer}>\r\n        <FeedbackOptions\r\n          options={[\"good\", \"neutral\", \"bad\"]}\r\n          onLeaveFeedback={this.handleLeaveFeedback}\r\n        />\r\n        {good > 0 || neutral > 0 || bad > 0 ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}